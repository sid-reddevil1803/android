/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://code.google.com/p/google-apis-client-generator/
 * (build: 2015-08-03 17:34:38 UTC)
 * on 2015-11-06 at 17:05:36 UTC 
 * Modify at your own risk.
 */

package com.appspot.campus_connect_2015.clubs;

/**
 * Service definition for Clubs (v1).
 *
 * <p>
 * This is an API
 * </p>
 *
 * <p>
 * For more information about this service, see the
 * <a href="" target="_blank">API Documentation</a>
 * </p>
 *
 * <p>
 * This service uses {@link ClubsRequestInitializer} to initialize global parameters via its
 * {@link Builder}.
 * </p>
 *
 * @since 1.3
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public class Clubs extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient {

  // Note: Leave this static initializer at the top of the file.
  static {
    com.google.api.client.util.Preconditions.checkState(
        com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION == 1 &&
        com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION >= 15,
        "You are currently running with version %s of google-api-client. " +
        "You need at least version 1.15 of google-api-client to run version " +
        "1.20.0 of the clubs library.", com.google.api.client.googleapis.GoogleUtils.VERSION);
  }

  /**
   * The default encoded root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_ROOT_URL = "https://campus-connect-2015.appspot.com/_ah/api/";

  /**
   * The default encoded service path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_SERVICE_PATH = "clubs/v1/";

  /**
   * The default encoded base URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   */
  public static final String DEFAULT_BASE_URL = DEFAULT_ROOT_URL + DEFAULT_SERVICE_PATH;

  /**
   * Constructor.
   *
   * <p>
   * Use {@link Builder} if you need to specify any of the optional parameters.
   * </p>
   *
   * @param transport HTTP transport, which should normally be:
   *        <ul>
   *        <li>Google App Engine:
   *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
   *        <li>Android: {@code newCompatibleTransport} from
   *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
   *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
   *        </li>
   *        </ul>
   * @param jsonFactory JSON factory, which may be:
   *        <ul>
   *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
   *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
   *        <li>Android Honeycomb or higher:
   *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
   *        </ul>
   * @param httpRequestInitializer HTTP request initializer or {@code null} for none
   * @since 1.7
   */
  public Clubs(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
      com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
    this(new Builder(transport, jsonFactory, httpRequestInitializer));
  }

  /**
   * @param builder builder
   */
  Clubs(Builder builder) {
    super(builder);
  }

  @Override
  protected void initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest<?> httpClientRequest) throws java.io.IOException {
    super.initialize(httpClientRequest);
  }

  /**
   * Create a request for the method "adminFeed".
   *
   * This request holds the parameters needed by the clubs server.  After setting any optional
   * parameters, call the {@link AdminFeed#execute()} method to invoke the remote operation.
   *
   * @param content the {@link com.appspot.campus_connect_2015.clubs.model.ModelsGetInformation}
   * @return the request
   */
  public AdminFeed adminFeed(com.appspot.campus_connect_2015.clubs.model.ModelsGetInformation content) throws java.io.IOException {
    AdminFeed result = new AdminFeed(content);
    initialize(result);
    return result;
  }

  public class AdminFeed extends ClubsRequest<com.appspot.campus_connect_2015.clubs.model.ModelsCollegeFeed> {

    private static final String REST_PATH = "adminFeed";

    /**
     * Create a request for the method "adminFeed".
     *
     * This request holds the parameters needed by the the clubs server.  After setting any optional
     * parameters, call the {@link AdminFeed#execute()} method to invoke the remote operation. <p>
     * {@link
     * AdminFeed#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param content the {@link com.appspot.campus_connect_2015.clubs.model.ModelsGetInformation}
     * @since 1.13
     */
    protected AdminFeed(com.appspot.campus_connect_2015.clubs.model.ModelsGetInformation content) {
      super(Clubs.this, "POST", REST_PATH, content, com.appspot.campus_connect_2015.clubs.model.ModelsCollegeFeed.class);
    }

    @Override
    public AdminFeed setAlt(java.lang.String alt) {
      return (AdminFeed) super.setAlt(alt);
    }

    @Override
    public AdminFeed setFields(java.lang.String fields) {
      return (AdminFeed) super.setFields(fields);
    }

    @Override
    public AdminFeed setKey(java.lang.String key) {
      return (AdminFeed) super.setKey(key);
    }

    @Override
    public AdminFeed setOauthToken(java.lang.String oauthToken) {
      return (AdminFeed) super.setOauthToken(oauthToken);
    }

    @Override
    public AdminFeed setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (AdminFeed) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public AdminFeed setQuotaUser(java.lang.String quotaUser) {
      return (AdminFeed) super.setQuotaUser(quotaUser);
    }

    @Override
    public AdminFeed setUserIp(java.lang.String userIp) {
      return (AdminFeed) super.setUserIp(userIp);
    }

    @Override
    public AdminFeed set(String parameterName, Object value) {
      return (AdminFeed) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "approveClubReq".
   *
   * This request holds the parameters needed by the clubs server.  After setting any optional
   * parameters, call the {@link ApproveClubReq#execute()} method to invoke the remote operation.
   *
   * @param content the {@link com.appspot.campus_connect_2015.clubs.model.ModelsRequestMiniForm}
   * @return the request
   */
  public ApproveClubReq approveClubReq(com.appspot.campus_connect_2015.clubs.model.ModelsRequestMiniForm content) throws java.io.IOException {
    ApproveClubReq result = new ApproveClubReq(content);
    initialize(result);
    return result;
  }

  public class ApproveClubReq extends ClubsRequest<Void> {

    private static final String REST_PATH = "approveclubreq";

    /**
     * Create a request for the method "approveClubReq".
     *
     * This request holds the parameters needed by the the clubs server.  After setting any optional
     * parameters, call the {@link ApproveClubReq#execute()} method to invoke the remote operation.
     * <p> {@link ApproveClubReq#initialize(com.google.api.client.googleapis.services.AbstractGoogleCl
     * ientRequest)} must be called to initialize this instance immediately after invoking the
     * constructor. </p>
     *
     * @param content the {@link com.appspot.campus_connect_2015.clubs.model.ModelsRequestMiniForm}
     * @since 1.13
     */
    protected ApproveClubReq(com.appspot.campus_connect_2015.clubs.model.ModelsRequestMiniForm content) {
      super(Clubs.this, "POST", REST_PATH, content, Void.class);
    }

    @Override
    public ApproveClubReq setAlt(java.lang.String alt) {
      return (ApproveClubReq) super.setAlt(alt);
    }

    @Override
    public ApproveClubReq setFields(java.lang.String fields) {
      return (ApproveClubReq) super.setFields(fields);
    }

    @Override
    public ApproveClubReq setKey(java.lang.String key) {
      return (ApproveClubReq) super.setKey(key);
    }

    @Override
    public ApproveClubReq setOauthToken(java.lang.String oauthToken) {
      return (ApproveClubReq) super.setOauthToken(oauthToken);
    }

    @Override
    public ApproveClubReq setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (ApproveClubReq) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public ApproveClubReq setQuotaUser(java.lang.String quotaUser) {
      return (ApproveClubReq) super.setQuotaUser(quotaUser);
    }

    @Override
    public ApproveClubReq setUserIp(java.lang.String userIp) {
      return (ApproveClubReq) super.setUserIp(userIp);
    }

    @Override
    public ApproveClubReq set(String parameterName, Object value) {
      return (ApproveClubReq) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "attendEvents".
   *
   * This request holds the parameters needed by the clubs server.  After setting any optional
   * parameters, call the {@link AttendEvents#execute()} method to invoke the remote operation.
   *
   * @param content the {@link com.appspot.campus_connect_2015.clubs.model.ModelsModifyEvent}
   * @return the request
   */
  public AttendEvents attendEvents(com.appspot.campus_connect_2015.clubs.model.ModelsModifyEvent content) throws java.io.IOException {
    AttendEvents result = new AttendEvents(content);
    initialize(result);
    return result;
  }

  public class AttendEvents extends ClubsRequest<Void> {

    private static final String REST_PATH = "attendEvent";

    /**
     * Create a request for the method "attendEvents".
     *
     * This request holds the parameters needed by the the clubs server.  After setting any optional
     * parameters, call the {@link AttendEvents#execute()} method to invoke the remote operation. <p>
     * {@link
     * AttendEvents#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param content the {@link com.appspot.campus_connect_2015.clubs.model.ModelsModifyEvent}
     * @since 1.13
     */
    protected AttendEvents(com.appspot.campus_connect_2015.clubs.model.ModelsModifyEvent content) {
      super(Clubs.this, "POST", REST_PATH, content, Void.class);
    }

    @Override
    public AttendEvents setAlt(java.lang.String alt) {
      return (AttendEvents) super.setAlt(alt);
    }

    @Override
    public AttendEvents setFields(java.lang.String fields) {
      return (AttendEvents) super.setFields(fields);
    }

    @Override
    public AttendEvents setKey(java.lang.String key) {
      return (AttendEvents) super.setKey(key);
    }

    @Override
    public AttendEvents setOauthToken(java.lang.String oauthToken) {
      return (AttendEvents) super.setOauthToken(oauthToken);
    }

    @Override
    public AttendEvents setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (AttendEvents) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public AttendEvents setQuotaUser(java.lang.String quotaUser) {
      return (AttendEvents) super.setQuotaUser(quotaUser);
    }

    @Override
    public AttendEvents setUserIp(java.lang.String userIp) {
      return (AttendEvents) super.setUserIp(userIp);
    }

    @Override
    public AttendEvents set(String parameterName, Object value) {
      return (AttendEvents) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "collegeFeed".
   *
   * This request holds the parameters needed by the clubs server.  After setting any optional
   * parameters, call the {@link CollegeFeed#execute()} method to invoke the remote operation.
   *
   * @param content the {@link com.appspot.campus_connect_2015.clubs.model.ModelsGetInformation}
   * @return the request
   */
  public CollegeFeed collegeFeed(com.appspot.campus_connect_2015.clubs.model.ModelsGetInformation content) throws java.io.IOException {
    CollegeFeed result = new CollegeFeed(content);
    initialize(result);
    return result;
  }

  public class CollegeFeed extends ClubsRequest<com.appspot.campus_connect_2015.clubs.model.ModelsCollegeFeed> {

    private static final String REST_PATH = "mainFeed";

    /**
     * Create a request for the method "collegeFeed".
     *
     * This request holds the parameters needed by the the clubs server.  After setting any optional
     * parameters, call the {@link CollegeFeed#execute()} method to invoke the remote operation. <p>
     * {@link
     * CollegeFeed#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param content the {@link com.appspot.campus_connect_2015.clubs.model.ModelsGetInformation}
     * @since 1.13
     */
    protected CollegeFeed(com.appspot.campus_connect_2015.clubs.model.ModelsGetInformation content) {
      super(Clubs.this, "POST", REST_PATH, content, com.appspot.campus_connect_2015.clubs.model.ModelsCollegeFeed.class);
    }

    @Override
    public CollegeFeed setAlt(java.lang.String alt) {
      return (CollegeFeed) super.setAlt(alt);
    }

    @Override
    public CollegeFeed setFields(java.lang.String fields) {
      return (CollegeFeed) super.setFields(fields);
    }

    @Override
    public CollegeFeed setKey(java.lang.String key) {
      return (CollegeFeed) super.setKey(key);
    }

    @Override
    public CollegeFeed setOauthToken(java.lang.String oauthToken) {
      return (CollegeFeed) super.setOauthToken(oauthToken);
    }

    @Override
    public CollegeFeed setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (CollegeFeed) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public CollegeFeed setQuotaUser(java.lang.String quotaUser) {
      return (CollegeFeed) super.setQuotaUser(quotaUser);
    }

    @Override
    public CollegeFeed setUserIp(java.lang.String userIp) {
      return (CollegeFeed) super.setUserIp(userIp);
    }

    @Override
    public CollegeFeed set(String parameterName, Object value) {
      return (CollegeFeed) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "comments".
   *
   * This request holds the parameters needed by the clubs server.  After setting any optional
   * parameters, call the {@link Comments#execute()} method to invoke the remote operation.
   *
   * @param content the {@link com.appspot.campus_connect_2015.clubs.model.ModelsCommentsForm}
   * @return the request
   */
  public Comments comments(com.appspot.campus_connect_2015.clubs.model.ModelsCommentsForm content) throws java.io.IOException {
    Comments result = new Comments(content);
    initialize(result);
    return result;
  }

  public class Comments extends ClubsRequest<Void> {

    private static final String REST_PATH = "comment";

    /**
     * Create a request for the method "comments".
     *
     * This request holds the parameters needed by the the clubs server.  After setting any optional
     * parameters, call the {@link Comments#execute()} method to invoke the remote operation. <p>
     * {@link
     * Comments#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param content the {@link com.appspot.campus_connect_2015.clubs.model.ModelsCommentsForm}
     * @since 1.13
     */
    protected Comments(com.appspot.campus_connect_2015.clubs.model.ModelsCommentsForm content) {
      super(Clubs.this, "POST", REST_PATH, content, Void.class);
    }

    @Override
    public Comments setAlt(java.lang.String alt) {
      return (Comments) super.setAlt(alt);
    }

    @Override
    public Comments setFields(java.lang.String fields) {
      return (Comments) super.setFields(fields);
    }

    @Override
    public Comments setKey(java.lang.String key) {
      return (Comments) super.setKey(key);
    }

    @Override
    public Comments setOauthToken(java.lang.String oauthToken) {
      return (Comments) super.setOauthToken(oauthToken);
    }

    @Override
    public Comments setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (Comments) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public Comments setQuotaUser(java.lang.String quotaUser) {
      return (Comments) super.setQuotaUser(quotaUser);
    }

    @Override
    public Comments setUserIp(java.lang.String userIp) {
      return (Comments) super.setUserIp(userIp);
    }

    @Override
    public Comments set(String parameterName, Object value) {
      return (Comments) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "createClub".
   *
   * This request holds the parameters needed by the clubs server.  After setting any optional
   * parameters, call the {@link CreateClub#execute()} method to invoke the remote operation.
   *
   * @param content the {@link com.appspot.campus_connect_2015.clubs.model.ModelsRequestMiniForm}
   * @return the request
   */
  public CreateClub createClub(com.appspot.campus_connect_2015.clubs.model.ModelsRequestMiniForm content) throws java.io.IOException {
    CreateClub result = new CreateClub(content);
    initialize(result);
    return result;
  }

  public class CreateClub extends ClubsRequest<Void> {

    private static final String REST_PATH = "clubcreate";

    /**
     * Create a request for the method "createClub".
     *
     * This request holds the parameters needed by the the clubs server.  After setting any optional
     * parameters, call the {@link CreateClub#execute()} method to invoke the remote operation. <p>
     * {@link
     * CreateClub#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param content the {@link com.appspot.campus_connect_2015.clubs.model.ModelsRequestMiniForm}
     * @since 1.13
     */
    protected CreateClub(com.appspot.campus_connect_2015.clubs.model.ModelsRequestMiniForm content) {
      super(Clubs.this, "POST", REST_PATH, content, Void.class);
    }

    @Override
    public CreateClub setAlt(java.lang.String alt) {
      return (CreateClub) super.setAlt(alt);
    }

    @Override
    public CreateClub setFields(java.lang.String fields) {
      return (CreateClub) super.setFields(fields);
    }

    @Override
    public CreateClub setKey(java.lang.String key) {
      return (CreateClub) super.setKey(key);
    }

    @Override
    public CreateClub setOauthToken(java.lang.String oauthToken) {
      return (CreateClub) super.setOauthToken(oauthToken);
    }

    @Override
    public CreateClub setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (CreateClub) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public CreateClub setQuotaUser(java.lang.String quotaUser) {
      return (CreateClub) super.setQuotaUser(quotaUser);
    }

    @Override
    public CreateClub setUserIp(java.lang.String userIp) {
      return (CreateClub) super.setUserIp(userIp);
    }

    @Override
    public CreateClub set(String parameterName, Object value) {
      return (CreateClub) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "createClubRequest".
   *
   * This request holds the parameters needed by the clubs server.  After setting any optional
   * parameters, call the {@link CreateClubRequest#execute()} method to invoke the remote operation.
   *
   * @param content the {@link com.appspot.campus_connect_2015.clubs.model.ModelsClubRequestMiniForm}
   * @return the request
   */
  public CreateClubRequest createClubRequest(com.appspot.campus_connect_2015.clubs.model.ModelsClubRequestMiniForm content) throws java.io.IOException {
    CreateClubRequest result = new CreateClubRequest(content);
    initialize(result);
    return result;
  }

  public class CreateClubRequest extends ClubsRequest<Void> {

    private static final String REST_PATH = "club";

    /**
     * Create a request for the method "createClubRequest".
     *
     * This request holds the parameters needed by the the clubs server.  After setting any optional
     * parameters, call the {@link CreateClubRequest#execute()} method to invoke the remote operation.
     * <p> {@link CreateClubRequest#initialize(com.google.api.client.googleapis.services.AbstractGoogl
     * eClientRequest)} must be called to initialize this instance immediately after invoking the
     * constructor. </p>
     *
     * @param content the {@link com.appspot.campus_connect_2015.clubs.model.ModelsClubRequestMiniForm}
     * @since 1.13
     */
    protected CreateClubRequest(com.appspot.campus_connect_2015.clubs.model.ModelsClubRequestMiniForm content) {
      super(Clubs.this, "POST", REST_PATH, content, Void.class);
    }

    @Override
    public CreateClubRequest setAlt(java.lang.String alt) {
      return (CreateClubRequest) super.setAlt(alt);
    }

    @Override
    public CreateClubRequest setFields(java.lang.String fields) {
      return (CreateClubRequest) super.setFields(fields);
    }

    @Override
    public CreateClubRequest setKey(java.lang.String key) {
      return (CreateClubRequest) super.setKey(key);
    }

    @Override
    public CreateClubRequest setOauthToken(java.lang.String oauthToken) {
      return (CreateClubRequest) super.setOauthToken(oauthToken);
    }

    @Override
    public CreateClubRequest setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (CreateClubRequest) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public CreateClubRequest setQuotaUser(java.lang.String quotaUser) {
      return (CreateClubRequest) super.setQuotaUser(quotaUser);
    }

    @Override
    public CreateClubRequest setUserIp(java.lang.String userIp) {
      return (CreateClubRequest) super.setUserIp(userIp);
    }

    @Override
    public CreateClubRequest set(String parameterName, Object value) {
      return (CreateClubRequest) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "createCollege".
   *
   * This request holds the parameters needed by the clubs server.  After setting any optional
   * parameters, call the {@link CreateCollege#execute()} method to invoke the remote operation.
   *
   * @param content the {@link com.appspot.campus_connect_2015.clubs.model.ModelsCollegeDbMiniForm}
   * @return the request
   */
  public CreateCollege createCollege(com.appspot.campus_connect_2015.clubs.model.ModelsCollegeDbMiniForm content) throws java.io.IOException {
    CreateCollege result = new CreateCollege(content);
    initialize(result);
    return result;
  }

  public class CreateCollege extends ClubsRequest<Void> {

    private static final String REST_PATH = "collegeDB";

    /**
     * Create a request for the method "createCollege".
     *
     * This request holds the parameters needed by the the clubs server.  After setting any optional
     * parameters, call the {@link CreateCollege#execute()} method to invoke the remote operation. <p>
     * {@link CreateCollege#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientR
     * equest)} must be called to initialize this instance immediately after invoking the constructor.
     * </p>
     *
     * @param content the {@link com.appspot.campus_connect_2015.clubs.model.ModelsCollegeDbMiniForm}
     * @since 1.13
     */
    protected CreateCollege(com.appspot.campus_connect_2015.clubs.model.ModelsCollegeDbMiniForm content) {
      super(Clubs.this, "POST", REST_PATH, content, Void.class);
    }

    @Override
    public CreateCollege setAlt(java.lang.String alt) {
      return (CreateCollege) super.setAlt(alt);
    }

    @Override
    public CreateCollege setFields(java.lang.String fields) {
      return (CreateCollege) super.setFields(fields);
    }

    @Override
    public CreateCollege setKey(java.lang.String key) {
      return (CreateCollege) super.setKey(key);
    }

    @Override
    public CreateCollege setOauthToken(java.lang.String oauthToken) {
      return (CreateCollege) super.setOauthToken(oauthToken);
    }

    @Override
    public CreateCollege setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (CreateCollege) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public CreateCollege setQuotaUser(java.lang.String quotaUser) {
      return (CreateCollege) super.setQuotaUser(quotaUser);
    }

    @Override
    public CreateCollege setUserIp(java.lang.String userIp) {
      return (CreateCollege) super.setUserIp(userIp);
    }

    @Override
    public CreateCollege set(String parameterName, Object value) {
      return (CreateCollege) super.set(parameterName, value);
    }
  }

  /**
   * Update & return user profile.
   *
   * Create a request for the method "delEvent".
   *
   * This request holds the parameters needed by the clubs server.  After setting any optional
   * parameters, call the {@link DelEvent#execute()} method to invoke the remote operation.
   *
   * @param fromPid
   * @param eventId
   * @return the request
   */
  public DelEvent delEvent(java.lang.String fromPid, java.lang.String eventId) throws java.io.IOException {
    DelEvent result = new DelEvent(fromPid, eventId);
    initialize(result);
    return result;
  }

  public class DelEvent extends ClubsRequest<Void> {

    private static final String REST_PATH = "deleteEvent";

    /**
     * Update & return user profile.
     *
     * Create a request for the method "delEvent".
     *
     * This request holds the parameters needed by the the clubs server.  After setting any optional
     * parameters, call the {@link DelEvent#execute()} method to invoke the remote operation. <p>
     * {@link
     * DelEvent#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param fromPid
     * @param eventId
     * @since 1.13
     */
    protected DelEvent(java.lang.String fromPid, java.lang.String eventId) {
      super(Clubs.this, "DELETE", REST_PATH, null, Void.class);
      this.fromPid = com.google.api.client.util.Preconditions.checkNotNull(fromPid, "Required parameter fromPid must be specified.");
      this.eventId = com.google.api.client.util.Preconditions.checkNotNull(eventId, "Required parameter eventId must be specified.");
    }

    @Override
    public DelEvent setAlt(java.lang.String alt) {
      return (DelEvent) super.setAlt(alt);
    }

    @Override
    public DelEvent setFields(java.lang.String fields) {
      return (DelEvent) super.setFields(fields);
    }

    @Override
    public DelEvent setKey(java.lang.String key) {
      return (DelEvent) super.setKey(key);
    }

    @Override
    public DelEvent setOauthToken(java.lang.String oauthToken) {
      return (DelEvent) super.setOauthToken(oauthToken);
    }

    @Override
    public DelEvent setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (DelEvent) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public DelEvent setQuotaUser(java.lang.String quotaUser) {
      return (DelEvent) super.setQuotaUser(quotaUser);
    }

    @Override
    public DelEvent setUserIp(java.lang.String userIp) {
      return (DelEvent) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key("from_pid")
    private java.lang.String fromPid;

    /**

     */
    public java.lang.String getFromPid() {
      return fromPid;
    }

    public DelEvent setFromPid(java.lang.String fromPid) {
      this.fromPid = fromPid;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String eventId;

    /**

     */
    public java.lang.String getEventId() {
      return eventId;
    }

    public DelEvent setEventId(java.lang.String eventId) {
      this.eventId = eventId;
      return this;
    }

    @Override
    public DelEvent set(String parameterName, Object value) {
      return (DelEvent) super.set(parameterName, value);
    }
  }

  /**
   * Update & return user profile.
   *
   * Create a request for the method "delPost".
   *
   * This request holds the parameters needed by the clubs server.  After setting any optional
   * parameters, call the {@link DelPost#execute()} method to invoke the remote operation.
   *
   * @param fromPid
   * @param postId
   * @return the request
   */
  public DelPost delPost(java.lang.String fromPid, java.lang.String postId) throws java.io.IOException {
    DelPost result = new DelPost(fromPid, postId);
    initialize(result);
    return result;
  }

  public class DelPost extends ClubsRequest<Void> {

    private static final String REST_PATH = "deletePost";

    /**
     * Update & return user profile.
     *
     * Create a request for the method "delPost".
     *
     * This request holds the parameters needed by the the clubs server.  After setting any optional
     * parameters, call the {@link DelPost#execute()} method to invoke the remote operation. <p>
     * {@link
     * DelPost#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
     * be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param fromPid
     * @param postId
     * @since 1.13
     */
    protected DelPost(java.lang.String fromPid, java.lang.String postId) {
      super(Clubs.this, "DELETE", REST_PATH, null, Void.class);
      this.fromPid = com.google.api.client.util.Preconditions.checkNotNull(fromPid, "Required parameter fromPid must be specified.");
      this.postId = com.google.api.client.util.Preconditions.checkNotNull(postId, "Required parameter postId must be specified.");
    }

    @Override
    public DelPost setAlt(java.lang.String alt) {
      return (DelPost) super.setAlt(alt);
    }

    @Override
    public DelPost setFields(java.lang.String fields) {
      return (DelPost) super.setFields(fields);
    }

    @Override
    public DelPost setKey(java.lang.String key) {
      return (DelPost) super.setKey(key);
    }

    @Override
    public DelPost setOauthToken(java.lang.String oauthToken) {
      return (DelPost) super.setOauthToken(oauthToken);
    }

    @Override
    public DelPost setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (DelPost) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public DelPost setQuotaUser(java.lang.String quotaUser) {
      return (DelPost) super.setQuotaUser(quotaUser);
    }

    @Override
    public DelPost setUserIp(java.lang.String userIp) {
      return (DelPost) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key("from_pid")
    private java.lang.String fromPid;

    /**

     */
    public java.lang.String getFromPid() {
      return fromPid;
    }

    public DelPost setFromPid(java.lang.String fromPid) {
      this.fromPid = fromPid;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String postId;

    /**

     */
    public java.lang.String getPostId() {
      return postId;
    }

    public DelPost setPostId(java.lang.String postId) {
      this.postId = postId;
      return this;
    }

    @Override
    public DelPost set(String parameterName, Object value) {
      return (DelPost) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "editPost".
   *
   * This request holds the parameters needed by the clubs server.  After setting any optional
   * parameters, call the {@link EditPost#execute()} method to invoke the remote operation.
   *
   * @param content the {@link com.appspot.campus_connect_2015.clubs.model.ModelsEditPostForm}
   * @return the request
   */
  public EditPost editPost(com.appspot.campus_connect_2015.clubs.model.ModelsEditPostForm content) throws java.io.IOException {
    EditPost result = new EditPost(content);
    initialize(result);
    return result;
  }

  public class EditPost extends ClubsRequest<Void> {

    private static final String REST_PATH = "editPost";

    /**
     * Create a request for the method "editPost".
     *
     * This request holds the parameters needed by the the clubs server.  After setting any optional
     * parameters, call the {@link EditPost#execute()} method to invoke the remote operation. <p>
     * {@link
     * EditPost#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param content the {@link com.appspot.campus_connect_2015.clubs.model.ModelsEditPostForm}
     * @since 1.13
     */
    protected EditPost(com.appspot.campus_connect_2015.clubs.model.ModelsEditPostForm content) {
      super(Clubs.this, "POST", REST_PATH, content, Void.class);
    }

    @Override
    public EditPost setAlt(java.lang.String alt) {
      return (EditPost) super.setAlt(alt);
    }

    @Override
    public EditPost setFields(java.lang.String fields) {
      return (EditPost) super.setFields(fields);
    }

    @Override
    public EditPost setKey(java.lang.String key) {
      return (EditPost) super.setKey(key);
    }

    @Override
    public EditPost setOauthToken(java.lang.String oauthToken) {
      return (EditPost) super.setOauthToken(oauthToken);
    }

    @Override
    public EditPost setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (EditPost) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public EditPost setQuotaUser(java.lang.String quotaUser) {
      return (EditPost) super.setQuotaUser(quotaUser);
    }

    @Override
    public EditPost setUserIp(java.lang.String userIp) {
      return (EditPost) super.setUserIp(userIp);
    }

    @Override
    public EditPost set(String parameterName, Object value) {
      return (EditPost) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "eventEntry".
   *
   * This request holds the parameters needed by the clubs server.  After setting any optional
   * parameters, call the {@link EventEntry#execute()} method to invoke the remote operation.
   *
   * @param content the {@link com.appspot.campus_connect_2015.clubs.model.ModelsEventMiniForm}
   * @return the request
   */
  public EventEntry eventEntry(com.appspot.campus_connect_2015.clubs.model.ModelsEventMiniForm content) throws java.io.IOException {
    EventEntry result = new EventEntry(content);
    initialize(result);
    return result;
  }

  public class EventEntry extends ClubsRequest<com.appspot.campus_connect_2015.clubs.model.ModelsMessageResponse> {

    private static final String REST_PATH = "eventEntry";

    /**
     * Create a request for the method "eventEntry".
     *
     * This request holds the parameters needed by the the clubs server.  After setting any optional
     * parameters, call the {@link EventEntry#execute()} method to invoke the remote operation. <p>
     * {@link
     * EventEntry#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param content the {@link com.appspot.campus_connect_2015.clubs.model.ModelsEventMiniForm}
     * @since 1.13
     */
    protected EventEntry(com.appspot.campus_connect_2015.clubs.model.ModelsEventMiniForm content) {
      super(Clubs.this, "POST", REST_PATH, content, com.appspot.campus_connect_2015.clubs.model.ModelsMessageResponse.class);
    }

    @Override
    public EventEntry setAlt(java.lang.String alt) {
      return (EventEntry) super.setAlt(alt);
    }

    @Override
    public EventEntry setFields(java.lang.String fields) {
      return (EventEntry) super.setFields(fields);
    }

    @Override
    public EventEntry setKey(java.lang.String key) {
      return (EventEntry) super.setKey(key);
    }

    @Override
    public EventEntry setOauthToken(java.lang.String oauthToken) {
      return (EventEntry) super.setOauthToken(oauthToken);
    }

    @Override
    public EventEntry setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (EventEntry) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public EventEntry setQuotaUser(java.lang.String quotaUser) {
      return (EventEntry) super.setQuotaUser(quotaUser);
    }

    @Override
    public EventEntry setUserIp(java.lang.String userIp) {
      return (EventEntry) super.setUserIp(userIp);
    }

    @Override
    public EventEntry set(String parameterName, Object value) {
      return (EventEntry) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "followClub".
   *
   * This request holds the parameters needed by the clubs server.  After setting any optional
   * parameters, call the {@link FollowClub#execute()} method to invoke the remote operation.
   *
   * @param content the {@link com.appspot.campus_connect_2015.clubs.model.ModelsFollowClubMiniForm}
   * @return the request
   */
  public FollowClub followClub(com.appspot.campus_connect_2015.clubs.model.ModelsFollowClubMiniForm content) throws java.io.IOException {
    FollowClub result = new FollowClub(content);
    initialize(result);
    return result;
  }

  public class FollowClub extends ClubsRequest<Void> {

    private static final String REST_PATH = "followClub";

    /**
     * Create a request for the method "followClub".
     *
     * This request holds the parameters needed by the the clubs server.  After setting any optional
     * parameters, call the {@link FollowClub#execute()} method to invoke the remote operation. <p>
     * {@link
     * FollowClub#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param content the {@link com.appspot.campus_connect_2015.clubs.model.ModelsFollowClubMiniForm}
     * @since 1.13
     */
    protected FollowClub(com.appspot.campus_connect_2015.clubs.model.ModelsFollowClubMiniForm content) {
      super(Clubs.this, "POST", REST_PATH, content, Void.class);
    }

    @Override
    public FollowClub setAlt(java.lang.String alt) {
      return (FollowClub) super.setAlt(alt);
    }

    @Override
    public FollowClub setFields(java.lang.String fields) {
      return (FollowClub) super.setFields(fields);
    }

    @Override
    public FollowClub setKey(java.lang.String key) {
      return (FollowClub) super.setKey(key);
    }

    @Override
    public FollowClub setOauthToken(java.lang.String oauthToken) {
      return (FollowClub) super.setOauthToken(oauthToken);
    }

    @Override
    public FollowClub setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (FollowClub) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public FollowClub setQuotaUser(java.lang.String quotaUser) {
      return (FollowClub) super.setQuotaUser(quotaUser);
    }

    @Override
    public FollowClub setUserIp(java.lang.String userIp) {
      return (FollowClub) super.setUserIp(userIp);
    }

    @Override
    public FollowClub set(String parameterName, Object value) {
      return (FollowClub) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getClub".
   *
   * This request holds the parameters needed by the clubs server.  After setting any optional
   * parameters, call the {@link GetClub#execute()} method to invoke the remote operation.
   *
   * @param content the {@link com.appspot.campus_connect_2015.clubs.model.ModelsGetClubMiniForm}
   * @return the request
   */
  public GetClub getClub(com.appspot.campus_connect_2015.clubs.model.ModelsGetClubMiniForm content) throws java.io.IOException {
    GetClub result = new GetClub(content);
    initialize(result);
    return result;
  }

  public class GetClub extends ClubsRequest<com.appspot.campus_connect_2015.clubs.model.ModelsClubMiniForm> {

    private static final String REST_PATH = "getClub";

    /**
     * Create a request for the method "getClub".
     *
     * This request holds the parameters needed by the the clubs server.  After setting any optional
     * parameters, call the {@link GetClub#execute()} method to invoke the remote operation. <p>
     * {@link
     * GetClub#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
     * be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param content the {@link com.appspot.campus_connect_2015.clubs.model.ModelsGetClubMiniForm}
     * @since 1.13
     */
    protected GetClub(com.appspot.campus_connect_2015.clubs.model.ModelsGetClubMiniForm content) {
      super(Clubs.this, "POST", REST_PATH, content, com.appspot.campus_connect_2015.clubs.model.ModelsClubMiniForm.class);
    }

    @Override
    public GetClub setAlt(java.lang.String alt) {
      return (GetClub) super.setAlt(alt);
    }

    @Override
    public GetClub setFields(java.lang.String fields) {
      return (GetClub) super.setFields(fields);
    }

    @Override
    public GetClub setKey(java.lang.String key) {
      return (GetClub) super.setKey(key);
    }

    @Override
    public GetClub setOauthToken(java.lang.String oauthToken) {
      return (GetClub) super.setOauthToken(oauthToken);
    }

    @Override
    public GetClub setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetClub) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetClub setQuotaUser(java.lang.String quotaUser) {
      return (GetClub) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetClub setUserIp(java.lang.String userIp) {
      return (GetClub) super.setUserIp(userIp);
    }

    @Override
    public GetClub set(String parameterName, Object value) {
      return (GetClub) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getClubList".
   *
   * This request holds the parameters needed by the clubs server.  After setting any optional
   * parameters, call the {@link GetClubList#execute()} method to invoke the remote operation.
   *
   * @param content the {@link com.appspot.campus_connect_2015.clubs.model.ModelsClubRetrievalMiniForm}
   * @return the request
   */
  public GetClubList getClubList(com.appspot.campus_connect_2015.clubs.model.ModelsClubRetrievalMiniForm content) throws java.io.IOException {
    GetClubList result = new GetClubList(content);
    initialize(result);
    return result;
  }

  public class GetClubList extends ClubsRequest<com.appspot.campus_connect_2015.clubs.model.ModelsClubListResponse> {

    private static final String REST_PATH = "getClubList";

    /**
     * Create a request for the method "getClubList".
     *
     * This request holds the parameters needed by the the clubs server.  After setting any optional
     * parameters, call the {@link GetClubList#execute()} method to invoke the remote operation. <p>
     * {@link
     * GetClubList#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param content the {@link com.appspot.campus_connect_2015.clubs.model.ModelsClubRetrievalMiniForm}
     * @since 1.13
     */
    protected GetClubList(com.appspot.campus_connect_2015.clubs.model.ModelsClubRetrievalMiniForm content) {
      super(Clubs.this, "POST", REST_PATH, content, com.appspot.campus_connect_2015.clubs.model.ModelsClubListResponse.class);
    }

    @Override
    public GetClubList setAlt(java.lang.String alt) {
      return (GetClubList) super.setAlt(alt);
    }

    @Override
    public GetClubList setFields(java.lang.String fields) {
      return (GetClubList) super.setFields(fields);
    }

    @Override
    public GetClubList setKey(java.lang.String key) {
      return (GetClubList) super.setKey(key);
    }

    @Override
    public GetClubList setOauthToken(java.lang.String oauthToken) {
      return (GetClubList) super.setOauthToken(oauthToken);
    }

    @Override
    public GetClubList setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetClubList) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetClubList setQuotaUser(java.lang.String quotaUser) {
      return (GetClubList) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetClubList setUserIp(java.lang.String userIp) {
      return (GetClubList) super.setUserIp(userIp);
    }

    @Override
    public GetClubList set(String parameterName, Object value) {
      return (GetClubList) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getColleges".
   *
   * This request holds the parameters needed by the clubs server.  After setting any optional
   * parameters, call the {@link GetColleges#execute()} method to invoke the remote operation.
   *
   * @return the request
   */
  public GetColleges getColleges() throws java.io.IOException {
    GetColleges result = new GetColleges();
    initialize(result);
    return result;
  }

  public class GetColleges extends ClubsRequest<com.appspot.campus_connect_2015.clubs.model.ModelsColleges> {

    private static final String REST_PATH = "getColleges";

    /**
     * Create a request for the method "getColleges".
     *
     * This request holds the parameters needed by the the clubs server.  After setting any optional
     * parameters, call the {@link GetColleges#execute()} method to invoke the remote operation. <p>
     * {@link
     * GetColleges#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @since 1.13
     */
    protected GetColleges() {
      super(Clubs.this, "GET", REST_PATH, null, com.appspot.campus_connect_2015.clubs.model.ModelsColleges.class);
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public GetColleges setAlt(java.lang.String alt) {
      return (GetColleges) super.setAlt(alt);
    }

    @Override
    public GetColleges setFields(java.lang.String fields) {
      return (GetColleges) super.setFields(fields);
    }

    @Override
    public GetColleges setKey(java.lang.String key) {
      return (GetColleges) super.setKey(key);
    }

    @Override
    public GetColleges setOauthToken(java.lang.String oauthToken) {
      return (GetColleges) super.setOauthToken(oauthToken);
    }

    @Override
    public GetColleges setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetColleges) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetColleges setQuotaUser(java.lang.String quotaUser) {
      return (GetColleges) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetColleges setUserIp(java.lang.String userIp) {
      return (GetColleges) super.setUserIp(userIp);
    }

    @Override
    public GetColleges set(String parameterName, Object value) {
      return (GetColleges) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getEvents".
   *
   * This request holds the parameters needed by the clubs server.  After setting any optional
   * parameters, call the {@link GetEvents#execute()} method to invoke the remote operation.
   *
   * @return the request
   */
  public GetEvents getEvents() throws java.io.IOException {
    GetEvents result = new GetEvents();
    initialize(result);
    return result;
  }

  public class GetEvents extends ClubsRequest<com.appspot.campus_connect_2015.clubs.model.ModelsEvents> {

    private static final String REST_PATH = "getEvents";

    /**
     * Create a request for the method "getEvents".
     *
     * This request holds the parameters needed by the the clubs server.  After setting any optional
     * parameters, call the {@link GetEvents#execute()} method to invoke the remote operation. <p>
     * {@link
     * GetEvents#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @since 1.13
     */
    protected GetEvents() {
      super(Clubs.this, "GET", REST_PATH, null, com.appspot.campus_connect_2015.clubs.model.ModelsEvents.class);
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public GetEvents setAlt(java.lang.String alt) {
      return (GetEvents) super.setAlt(alt);
    }

    @Override
    public GetEvents setFields(java.lang.String fields) {
      return (GetEvents) super.setFields(fields);
    }

    @Override
    public GetEvents setKey(java.lang.String key) {
      return (GetEvents) super.setKey(key);
    }

    @Override
    public GetEvents setOauthToken(java.lang.String oauthToken) {
      return (GetEvents) super.setOauthToken(oauthToken);
    }

    @Override
    public GetEvents setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetEvents) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetEvents setQuotaUser(java.lang.String quotaUser) {
      return (GetEvents) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetEvents setUserIp(java.lang.String userIp) {
      return (GetEvents) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String clubId;

    /**

     */
    public java.lang.String getClubId() {
      return clubId;
    }

    public GetEvents setClubId(java.lang.String clubId) {
      this.clubId = clubId;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String collegeId;

    /**

     */
    public java.lang.String getCollegeId() {
      return collegeId;
    }

    public GetEvents setCollegeId(java.lang.String collegeId) {
      this.collegeId = collegeId;
      return this;
    }

    @Override
    public GetEvents set(String parameterName, Object value) {
      return (GetEvents) super.set(parameterName, value);
    }
  }

  /**
   * Update & return user profile.
   *
   * Create a request for the method "getPostRequests".
   *
   * This request holds the parameters needed by the clubs server.  After setting any optional
   * parameters, call the {@link GetPostRequests#execute()} method to invoke the remote operation.
   *
   * @param content the {@link com.appspot.campus_connect_2015.clubs.model.ModelsGetInformation}
   * @return the request
   */
  public GetPostRequests getPostRequests(com.appspot.campus_connect_2015.clubs.model.ModelsGetInformation content) throws java.io.IOException {
    GetPostRequests result = new GetPostRequests(content);
    initialize(result);
    return result;
  }

  public class GetPostRequests extends ClubsRequest<com.appspot.campus_connect_2015.clubs.model.ModelsGetAllPostRequests> {

    private static final String REST_PATH = "getPostRequests";

    /**
     * Update & return user profile.
     *
     * Create a request for the method "getPostRequests".
     *
     * This request holds the parameters needed by the the clubs server.  After setting any optional
     * parameters, call the {@link GetPostRequests#execute()} method to invoke the remote operation.
     * <p> {@link GetPostRequests#initialize(com.google.api.client.googleapis.services.AbstractGoogleC
     * lientRequest)} must be called to initialize this instance immediately after invoking the
     * constructor. </p>
     *
     * @param content the {@link com.appspot.campus_connect_2015.clubs.model.ModelsGetInformation}
     * @since 1.13
     */
    protected GetPostRequests(com.appspot.campus_connect_2015.clubs.model.ModelsGetInformation content) {
      super(Clubs.this, "POST", REST_PATH, content, com.appspot.campus_connect_2015.clubs.model.ModelsGetAllPostRequests.class);
    }

    @Override
    public GetPostRequests setAlt(java.lang.String alt) {
      return (GetPostRequests) super.setAlt(alt);
    }

    @Override
    public GetPostRequests setFields(java.lang.String fields) {
      return (GetPostRequests) super.setFields(fields);
    }

    @Override
    public GetPostRequests setKey(java.lang.String key) {
      return (GetPostRequests) super.setKey(key);
    }

    @Override
    public GetPostRequests setOauthToken(java.lang.String oauthToken) {
      return (GetPostRequests) super.setOauthToken(oauthToken);
    }

    @Override
    public GetPostRequests setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetPostRequests) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetPostRequests setQuotaUser(java.lang.String quotaUser) {
      return (GetPostRequests) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetPostRequests setUserIp(java.lang.String userIp) {
      return (GetPostRequests) super.setUserIp(userIp);
    }

    @Override
    public GetPostRequests set(String parameterName, Object value) {
      return (GetPostRequests) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getPosts".
   *
   * This request holds the parameters needed by the clubs server.  After setting any optional
   * parameters, call the {@link GetPosts#execute()} method to invoke the remote operation.
   *
   * @return the request
   */
  public GetPosts getPosts() throws java.io.IOException {
    GetPosts result = new GetPosts();
    initialize(result);
    return result;
  }

  public class GetPosts extends ClubsRequest<com.appspot.campus_connect_2015.clubs.model.ModelsPosts> {

    private static final String REST_PATH = "getPosts";

    /**
     * Create a request for the method "getPosts".
     *
     * This request holds the parameters needed by the the clubs server.  After setting any optional
     * parameters, call the {@link GetPosts#execute()} method to invoke the remote operation. <p>
     * {@link
     * GetPosts#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @since 1.13
     */
    protected GetPosts() {
      super(Clubs.this, "GET", REST_PATH, null, com.appspot.campus_connect_2015.clubs.model.ModelsPosts.class);
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public GetPosts setAlt(java.lang.String alt) {
      return (GetPosts) super.setAlt(alt);
    }

    @Override
    public GetPosts setFields(java.lang.String fields) {
      return (GetPosts) super.setFields(fields);
    }

    @Override
    public GetPosts setKey(java.lang.String key) {
      return (GetPosts) super.setKey(key);
    }

    @Override
    public GetPosts setOauthToken(java.lang.String oauthToken) {
      return (GetPosts) super.setOauthToken(oauthToken);
    }

    @Override
    public GetPosts setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetPosts) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetPosts setQuotaUser(java.lang.String quotaUser) {
      return (GetPosts) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetPosts setUserIp(java.lang.String userIp) {
      return (GetPosts) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String clubId;

    /**

     */
    public java.lang.String getClubId() {
      return clubId;
    }

    public GetPosts setClubId(java.lang.String clubId) {
      this.clubId = clubId;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String collegeId;

    /**

     */
    public java.lang.String getCollegeId() {
      return collegeId;
    }

    public GetPosts setCollegeId(java.lang.String collegeId) {
      this.collegeId = collegeId;
      return this;
    }

    @Override
    public GetPosts set(String parameterName, Object value) {
      return (GetPosts) super.set(parameterName, value);
    }
  }

  /**
   * Return user profile.
   *
   * Create a request for the method "getProfile".
   *
   * This request holds the parameters needed by the clubs server.  After setting any optional
   * parameters, call the {@link GetProfile#execute()} method to invoke the remote operation.
   *
   * @param email
   * @return the request
   */
  public GetProfile getProfile(java.lang.String email) throws java.io.IOException {
    GetProfile result = new GetProfile(email);
    initialize(result);
    return result;
  }

  public class GetProfile extends ClubsRequest<com.appspot.campus_connect_2015.clubs.model.ModelsProfileMiniForm> {

    private static final String REST_PATH = "profile";

    /**
     * Return user profile.
     *
     * Create a request for the method "getProfile".
     *
     * This request holds the parameters needed by the the clubs server.  After setting any optional
     * parameters, call the {@link GetProfile#execute()} method to invoke the remote operation. <p>
     * {@link
     * GetProfile#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param email
     * @since 1.13
     */
    protected GetProfile(java.lang.String email) {
      super(Clubs.this, "GET", REST_PATH, null, com.appspot.campus_connect_2015.clubs.model.ModelsProfileMiniForm.class);
      this.email = com.google.api.client.util.Preconditions.checkNotNull(email, "Required parameter email must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public GetProfile setAlt(java.lang.String alt) {
      return (GetProfile) super.setAlt(alt);
    }

    @Override
    public GetProfile setFields(java.lang.String fields) {
      return (GetProfile) super.setFields(fields);
    }

    @Override
    public GetProfile setKey(java.lang.String key) {
      return (GetProfile) super.setKey(key);
    }

    @Override
    public GetProfile setOauthToken(java.lang.String oauthToken) {
      return (GetProfile) super.setOauthToken(oauthToken);
    }

    @Override
    public GetProfile setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetProfile) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetProfile setQuotaUser(java.lang.String quotaUser) {
      return (GetProfile) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetProfile setUserIp(java.lang.String userIp) {
      return (GetProfile) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String email;

    /**

     */
    public java.lang.String getEmail() {
      return email;
    }

    public GetProfile setEmail(java.lang.String email) {
      this.email = email;
      return this;
    }

    @Override
    public GetProfile set(String parameterName, Object value) {
      return (GetProfile) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "insertUnique".
   *
   * This request holds the parameters needed by the clubs server.  After setting any optional
   * parameters, call the {@link InsertUnique#execute()} method to invoke the remote operation.
   *
   * @return the request
   */
  public InsertUnique insertUnique() throws java.io.IOException {
    InsertUnique result = new InsertUnique();
    initialize(result);
    return result;
  }

  public class InsertUnique extends ClubsRequest<Void> {

    private static final String REST_PATH = "insertUnique";

    /**
     * Create a request for the method "insertUnique".
     *
     * This request holds the parameters needed by the the clubs server.  After setting any optional
     * parameters, call the {@link InsertUnique#execute()} method to invoke the remote operation. <p>
     * {@link
     * InsertUnique#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @since 1.13
     */
    protected InsertUnique() {
      super(Clubs.this, "POST", REST_PATH, null, Void.class);
    }

    @Override
    public InsertUnique setAlt(java.lang.String alt) {
      return (InsertUnique) super.setAlt(alt);
    }

    @Override
    public InsertUnique setFields(java.lang.String fields) {
      return (InsertUnique) super.setFields(fields);
    }

    @Override
    public InsertUnique setKey(java.lang.String key) {
      return (InsertUnique) super.setKey(key);
    }

    @Override
    public InsertUnique setOauthToken(java.lang.String oauthToken) {
      return (InsertUnique) super.setOauthToken(oauthToken);
    }

    @Override
    public InsertUnique setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (InsertUnique) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public InsertUnique setQuotaUser(java.lang.String quotaUser) {
      return (InsertUnique) super.setQuotaUser(quotaUser);
    }

    @Override
    public InsertUnique setUserIp(java.lang.String userIp) {
      return (InsertUnique) super.setUserIp(userIp);
    }

    @Override
    public InsertUnique set(String parameterName, Object value) {
      return (InsertUnique) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "joinClub".
   *
   * This request holds the parameters needed by the clubs server.  After setting any optional
   * parameters, call the {@link JoinClub#execute()} method to invoke the remote operation.
   *
   * @param content the {@link com.appspot.campus_connect_2015.clubs.model.ModelsJoinClubMiniForm}
   * @return the request
   */
  public JoinClub joinClub(com.appspot.campus_connect_2015.clubs.model.ModelsJoinClubMiniForm content) throws java.io.IOException {
    JoinClub result = new JoinClub(content);
    initialize(result);
    return result;
  }

  public class JoinClub extends ClubsRequest<Void> {

    private static final String REST_PATH = "joinClub";

    /**
     * Create a request for the method "joinClub".
     *
     * This request holds the parameters needed by the the clubs server.  After setting any optional
     * parameters, call the {@link JoinClub#execute()} method to invoke the remote operation. <p>
     * {@link
     * JoinClub#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param content the {@link com.appspot.campus_connect_2015.clubs.model.ModelsJoinClubMiniForm}
     * @since 1.13
     */
    protected JoinClub(com.appspot.campus_connect_2015.clubs.model.ModelsJoinClubMiniForm content) {
      super(Clubs.this, "POST", REST_PATH, content, Void.class);
    }

    @Override
    public JoinClub setAlt(java.lang.String alt) {
      return (JoinClub) super.setAlt(alt);
    }

    @Override
    public JoinClub setFields(java.lang.String fields) {
      return (JoinClub) super.setFields(fields);
    }

    @Override
    public JoinClub setKey(java.lang.String key) {
      return (JoinClub) super.setKey(key);
    }

    @Override
    public JoinClub setOauthToken(java.lang.String oauthToken) {
      return (JoinClub) super.setOauthToken(oauthToken);
    }

    @Override
    public JoinClub setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (JoinClub) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public JoinClub setQuotaUser(java.lang.String quotaUser) {
      return (JoinClub) super.setQuotaUser(quotaUser);
    }

    @Override
    public JoinClub setUserIp(java.lang.String userIp) {
      return (JoinClub) super.setUserIp(userIp);
    }

    @Override
    public JoinClub set(String parameterName, Object value) {
      return (JoinClub) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "likePosts".
   *
   * This request holds the parameters needed by the clubs server.  After setting any optional
   * parameters, call the {@link LikePosts#execute()} method to invoke the remote operation.
   *
   * @param content the {@link com.appspot.campus_connect_2015.clubs.model.ModelsLikePost}
   * @return the request
   */
  public LikePosts likePosts(com.appspot.campus_connect_2015.clubs.model.ModelsLikePost content) throws java.io.IOException {
    LikePosts result = new LikePosts(content);
    initialize(result);
    return result;
  }

  public class LikePosts extends ClubsRequest<Void> {

    private static final String REST_PATH = "likePost";

    /**
     * Create a request for the method "likePosts".
     *
     * This request holds the parameters needed by the the clubs server.  After setting any optional
     * parameters, call the {@link LikePosts#execute()} method to invoke the remote operation. <p>
     * {@link
     * LikePosts#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param content the {@link com.appspot.campus_connect_2015.clubs.model.ModelsLikePost}
     * @since 1.13
     */
    protected LikePosts(com.appspot.campus_connect_2015.clubs.model.ModelsLikePost content) {
      super(Clubs.this, "POST", REST_PATH, content, Void.class);
    }

    @Override
    public LikePosts setAlt(java.lang.String alt) {
      return (LikePosts) super.setAlt(alt);
    }

    @Override
    public LikePosts setFields(java.lang.String fields) {
      return (LikePosts) super.setFields(fields);
    }

    @Override
    public LikePosts setKey(java.lang.String key) {
      return (LikePosts) super.setKey(key);
    }

    @Override
    public LikePosts setOauthToken(java.lang.String oauthToken) {
      return (LikePosts) super.setOauthToken(oauthToken);
    }

    @Override
    public LikePosts setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (LikePosts) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public LikePosts setQuotaUser(java.lang.String quotaUser) {
      return (LikePosts) super.setQuotaUser(quotaUser);
    }

    @Override
    public LikePosts setUserIp(java.lang.String userIp) {
      return (LikePosts) super.setUserIp(userIp);
    }

    @Override
    public LikePosts set(String parameterName, Object value) {
      return (LikePosts) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "personalFeed".
   *
   * This request holds the parameters needed by the clubs server.  After setting any optional
   * parameters, call the {@link PersonalFeed#execute()} method to invoke the remote operation.
   *
   * @param content the {@link com.appspot.campus_connect_2015.clubs.model.ModelsGetInformation}
   * @return the request
   */
  public PersonalFeed personalFeed(com.appspot.campus_connect_2015.clubs.model.ModelsGetInformation content) throws java.io.IOException {
    PersonalFeed result = new PersonalFeed(content);
    initialize(result);
    return result;
  }

  public class PersonalFeed extends ClubsRequest<com.appspot.campus_connect_2015.clubs.model.ModelsCollegeFeed> {

    private static final String REST_PATH = "myFeed";

    /**
     * Create a request for the method "personalFeed".
     *
     * This request holds the parameters needed by the the clubs server.  After setting any optional
     * parameters, call the {@link PersonalFeed#execute()} method to invoke the remote operation. <p>
     * {@link
     * PersonalFeed#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param content the {@link com.appspot.campus_connect_2015.clubs.model.ModelsGetInformation}
     * @since 1.13
     */
    protected PersonalFeed(com.appspot.campus_connect_2015.clubs.model.ModelsGetInformation content) {
      super(Clubs.this, "POST", REST_PATH, content, com.appspot.campus_connect_2015.clubs.model.ModelsCollegeFeed.class);
    }

    @Override
    public PersonalFeed setAlt(java.lang.String alt) {
      return (PersonalFeed) super.setAlt(alt);
    }

    @Override
    public PersonalFeed setFields(java.lang.String fields) {
      return (PersonalFeed) super.setFields(fields);
    }

    @Override
    public PersonalFeed setKey(java.lang.String key) {
      return (PersonalFeed) super.setKey(key);
    }

    @Override
    public PersonalFeed setOauthToken(java.lang.String oauthToken) {
      return (PersonalFeed) super.setOauthToken(oauthToken);
    }

    @Override
    public PersonalFeed setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (PersonalFeed) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public PersonalFeed setQuotaUser(java.lang.String quotaUser) {
      return (PersonalFeed) super.setQuotaUser(quotaUser);
    }

    @Override
    public PersonalFeed setUserIp(java.lang.String userIp) {
      return (PersonalFeed) super.setUserIp(userIp);
    }

    @Override
    public PersonalFeed set(String parameterName, Object value) {
      return (PersonalFeed) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "postEntry".
   *
   * This request holds the parameters needed by the clubs server.  After setting any optional
   * parameters, call the {@link PostEntry#execute()} method to invoke the remote operation.
   *
   * @param content the {@link com.appspot.campus_connect_2015.clubs.model.ModelsPostMiniForm}
   * @return the request
   */
  public PostEntry postEntry(com.appspot.campus_connect_2015.clubs.model.ModelsPostMiniForm content) throws java.io.IOException {
    PostEntry result = new PostEntry(content);
    initialize(result);
    return result;
  }

  public class PostEntry extends ClubsRequest<com.appspot.campus_connect_2015.clubs.model.ModelsMessageResponse> {

    private static final String REST_PATH = "postEntry";

    /**
     * Create a request for the method "postEntry".
     *
     * This request holds the parameters needed by the the clubs server.  After setting any optional
     * parameters, call the {@link PostEntry#execute()} method to invoke the remote operation. <p>
     * {@link
     * PostEntry#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param content the {@link com.appspot.campus_connect_2015.clubs.model.ModelsPostMiniForm}
     * @since 1.13
     */
    protected PostEntry(com.appspot.campus_connect_2015.clubs.model.ModelsPostMiniForm content) {
      super(Clubs.this, "POST", REST_PATH, content, com.appspot.campus_connect_2015.clubs.model.ModelsMessageResponse.class);
    }

    @Override
    public PostEntry setAlt(java.lang.String alt) {
      return (PostEntry) super.setAlt(alt);
    }

    @Override
    public PostEntry setFields(java.lang.String fields) {
      return (PostEntry) super.setFields(fields);
    }

    @Override
    public PostEntry setKey(java.lang.String key) {
      return (PostEntry) super.setKey(key);
    }

    @Override
    public PostEntry setOauthToken(java.lang.String oauthToken) {
      return (PostEntry) super.setOauthToken(oauthToken);
    }

    @Override
    public PostEntry setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (PostEntry) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public PostEntry setQuotaUser(java.lang.String quotaUser) {
      return (PostEntry) super.setQuotaUser(quotaUser);
    }

    @Override
    public PostEntry setUserIp(java.lang.String userIp) {
      return (PostEntry) super.setUserIp(userIp);
    }

    @Override
    public PostEntry set(String parameterName, Object value) {
      return (PostEntry) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "postRequest".
   *
   * This request holds the parameters needed by the clubs server.  After setting any optional
   * parameters, call the {@link PostRequest#execute()} method to invoke the remote operation.
   *
   * @param content the {@link com.appspot.campus_connect_2015.clubs.model.ModelsPostMiniForm}
   * @return the request
   */
  public PostRequest postRequest(com.appspot.campus_connect_2015.clubs.model.ModelsPostMiniForm content) throws java.io.IOException {
    PostRequest result = new PostRequest(content);
    initialize(result);
    return result;
  }

  public class PostRequest extends ClubsRequest<Void> {

    private static final String REST_PATH = "postRequest";

    /**
     * Create a request for the method "postRequest".
     *
     * This request holds the parameters needed by the the clubs server.  After setting any optional
     * parameters, call the {@link PostRequest#execute()} method to invoke the remote operation. <p>
     * {@link
     * PostRequest#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param content the {@link com.appspot.campus_connect_2015.clubs.model.ModelsPostMiniForm}
     * @since 1.13
     */
    protected PostRequest(com.appspot.campus_connect_2015.clubs.model.ModelsPostMiniForm content) {
      super(Clubs.this, "POST", REST_PATH, content, Void.class);
    }

    @Override
    public PostRequest setAlt(java.lang.String alt) {
      return (PostRequest) super.setAlt(alt);
    }

    @Override
    public PostRequest setFields(java.lang.String fields) {
      return (PostRequest) super.setFields(fields);
    }

    @Override
    public PostRequest setKey(java.lang.String key) {
      return (PostRequest) super.setKey(key);
    }

    @Override
    public PostRequest setOauthToken(java.lang.String oauthToken) {
      return (PostRequest) super.setOauthToken(oauthToken);
    }

    @Override
    public PostRequest setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (PostRequest) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public PostRequest setQuotaUser(java.lang.String quotaUser) {
      return (PostRequest) super.setQuotaUser(quotaUser);
    }

    @Override
    public PostRequest setUserIp(java.lang.String userIp) {
      return (PostRequest) super.setUserIp(userIp);
    }

    @Override
    public PostRequest set(String parameterName, Object value) {
      return (PostRequest) super.set(parameterName, value);
    }
  }

  /**
   * Update & return user profile.
   *
   * Create a request for the method "saveProfile".
   *
   * This request holds the parameters needed by the clubs server.  After setting any optional
   * parameters, call the {@link SaveProfile#execute()} method to invoke the remote operation.
   *
   * @param content the {@link com.appspot.campus_connect_2015.clubs.model.ModelsProfileMiniForm}
   * @return the request
   */
  public SaveProfile saveProfile(com.appspot.campus_connect_2015.clubs.model.ModelsProfileMiniForm content) throws java.io.IOException {
    SaveProfile result = new SaveProfile(content);
    initialize(result);
    return result;
  }

  public class SaveProfile extends ClubsRequest<com.appspot.campus_connect_2015.clubs.model.ModelsProfileMiniForm> {

    private static final String REST_PATH = "profile";

    /**
     * Update & return user profile.
     *
     * Create a request for the method "saveProfile".
     *
     * This request holds the parameters needed by the the clubs server.  After setting any optional
     * parameters, call the {@link SaveProfile#execute()} method to invoke the remote operation. <p>
     * {@link
     * SaveProfile#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param content the {@link com.appspot.campus_connect_2015.clubs.model.ModelsProfileMiniForm}
     * @since 1.13
     */
    protected SaveProfile(com.appspot.campus_connect_2015.clubs.model.ModelsProfileMiniForm content) {
      super(Clubs.this, "POST", REST_PATH, content, com.appspot.campus_connect_2015.clubs.model.ModelsProfileMiniForm.class);
    }

    @Override
    public SaveProfile setAlt(java.lang.String alt) {
      return (SaveProfile) super.setAlt(alt);
    }

    @Override
    public SaveProfile setFields(java.lang.String fields) {
      return (SaveProfile) super.setFields(fields);
    }

    @Override
    public SaveProfile setKey(java.lang.String key) {
      return (SaveProfile) super.setKey(key);
    }

    @Override
    public SaveProfile setOauthToken(java.lang.String oauthToken) {
      return (SaveProfile) super.setOauthToken(oauthToken);
    }

    @Override
    public SaveProfile setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (SaveProfile) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public SaveProfile setQuotaUser(java.lang.String quotaUser) {
      return (SaveProfile) super.setQuotaUser(quotaUser);
    }

    @Override
    public SaveProfile setUserIp(java.lang.String userIp) {
      return (SaveProfile) super.setUserIp(userIp);
    }

    @Override
    public SaveProfile set(String parameterName, Object value) {
      return (SaveProfile) super.set(parameterName, value);
    }
  }

  /**
   * Update & return user profile.
   *
   * Create a request for the method "unfClub".
   *
   * This request holds the parameters needed by the clubs server.  After setting any optional
   * parameters, call the {@link UnfClub#execute()} method to invoke the remote operation.
   *
   * @param content the {@link com.appspot.campus_connect_2015.clubs.model.ModelsFollowClubMiniForm}
   * @return the request
   */
  public UnfClub unfClub(com.appspot.campus_connect_2015.clubs.model.ModelsFollowClubMiniForm content) throws java.io.IOException {
    UnfClub result = new UnfClub(content);
    initialize(result);
    return result;
  }

  public class UnfClub extends ClubsRequest<Void> {

    private static final String REST_PATH = "unfollowclub";

    /**
     * Update & return user profile.
     *
     * Create a request for the method "unfClub".
     *
     * This request holds the parameters needed by the the clubs server.  After setting any optional
     * parameters, call the {@link UnfClub#execute()} method to invoke the remote operation. <p>
     * {@link
     * UnfClub#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
     * be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param content the {@link com.appspot.campus_connect_2015.clubs.model.ModelsFollowClubMiniForm}
     * @since 1.13
     */
    protected UnfClub(com.appspot.campus_connect_2015.clubs.model.ModelsFollowClubMiniForm content) {
      super(Clubs.this, "POST", REST_PATH, content, Void.class);
    }

    @Override
    public UnfClub setAlt(java.lang.String alt) {
      return (UnfClub) super.setAlt(alt);
    }

    @Override
    public UnfClub setFields(java.lang.String fields) {
      return (UnfClub) super.setFields(fields);
    }

    @Override
    public UnfClub setKey(java.lang.String key) {
      return (UnfClub) super.setKey(key);
    }

    @Override
    public UnfClub setOauthToken(java.lang.String oauthToken) {
      return (UnfClub) super.setOauthToken(oauthToken);
    }

    @Override
    public UnfClub setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (UnfClub) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public UnfClub setQuotaUser(java.lang.String quotaUser) {
      return (UnfClub) super.setQuotaUser(quotaUser);
    }

    @Override
    public UnfClub setUserIp(java.lang.String userIp) {
      return (UnfClub) super.setUserIp(userIp);
    }

    @Override
    public UnfClub set(String parameterName, Object value) {
      return (UnfClub) super.set(parameterName, value);
    }
  }

  /**
   * Update & return user profile.
   *
   * Create a request for the method "unlikePost".
   *
   * This request holds the parameters needed by the clubs server.  After setting any optional
   * parameters, call the {@link UnlikePost#execute()} method to invoke the remote operation.
   *
   * @param content the {@link com.appspot.campus_connect_2015.clubs.model.ModelsLikePost}
   * @return the request
   */
  public UnlikePost unlikePost(com.appspot.campus_connect_2015.clubs.model.ModelsLikePost content) throws java.io.IOException {
    UnlikePost result = new UnlikePost(content);
    initialize(result);
    return result;
  }

  public class UnlikePost extends ClubsRequest<Void> {

    private static final String REST_PATH = "unlikePost";

    /**
     * Update & return user profile.
     *
     * Create a request for the method "unlikePost".
     *
     * This request holds the parameters needed by the the clubs server.  After setting any optional
     * parameters, call the {@link UnlikePost#execute()} method to invoke the remote operation. <p>
     * {@link
     * UnlikePost#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param content the {@link com.appspot.campus_connect_2015.clubs.model.ModelsLikePost}
     * @since 1.13
     */
    protected UnlikePost(com.appspot.campus_connect_2015.clubs.model.ModelsLikePost content) {
      super(Clubs.this, "POST", REST_PATH, content, Void.class);
    }

    @Override
    public UnlikePost setAlt(java.lang.String alt) {
      return (UnlikePost) super.setAlt(alt);
    }

    @Override
    public UnlikePost setFields(java.lang.String fields) {
      return (UnlikePost) super.setFields(fields);
    }

    @Override
    public UnlikePost setKey(java.lang.String key) {
      return (UnlikePost) super.setKey(key);
    }

    @Override
    public UnlikePost setOauthToken(java.lang.String oauthToken) {
      return (UnlikePost) super.setOauthToken(oauthToken);
    }

    @Override
    public UnlikePost setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (UnlikePost) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public UnlikePost setQuotaUser(java.lang.String quotaUser) {
      return (UnlikePost) super.setQuotaUser(quotaUser);
    }

    @Override
    public UnlikePost setUserIp(java.lang.String userIp) {
      return (UnlikePost) super.setUserIp(userIp);
    }

    @Override
    public UnlikePost set(String parameterName, Object value) {
      return (UnlikePost) super.set(parameterName, value);
    }
  }

  /**
   * Update & return user profile.
   *
   * Create a request for the method "updatePostRequests".
   *
   * This request holds the parameters needed by the clubs server.  After setting any optional
   * parameters, call the {@link UpdatePostRequests#execute()} method to invoke the remote operation.
   *
   * @param content the {@link com.appspot.campus_connect_2015.clubs.model.ModelsUpdatePostRequests}
   * @return the request
   */
  public UpdatePostRequests updatePostRequests(com.appspot.campus_connect_2015.clubs.model.ModelsUpdatePostRequests content) throws java.io.IOException {
    UpdatePostRequests result = new UpdatePostRequests(content);
    initialize(result);
    return result;
  }

  public class UpdatePostRequests extends ClubsRequest<Void> {

    private static final String REST_PATH = "updatePostRequests";

    /**
     * Update & return user profile.
     *
     * Create a request for the method "updatePostRequests".
     *
     * This request holds the parameters needed by the the clubs server.  After setting any optional
     * parameters, call the {@link UpdatePostRequests#execute()} method to invoke the remote
     * operation. <p> {@link UpdatePostRequests#initialize(com.google.api.client.googleapis.services.A
     * bstractGoogleClientRequest)} must be called to initialize this instance immediately after
     * invoking the constructor. </p>
     *
     * @param content the {@link com.appspot.campus_connect_2015.clubs.model.ModelsUpdatePostRequests}
     * @since 1.13
     */
    protected UpdatePostRequests(com.appspot.campus_connect_2015.clubs.model.ModelsUpdatePostRequests content) {
      super(Clubs.this, "POST", REST_PATH, content, Void.class);
    }

    @Override
    public UpdatePostRequests setAlt(java.lang.String alt) {
      return (UpdatePostRequests) super.setAlt(alt);
    }

    @Override
    public UpdatePostRequests setFields(java.lang.String fields) {
      return (UpdatePostRequests) super.setFields(fields);
    }

    @Override
    public UpdatePostRequests setKey(java.lang.String key) {
      return (UpdatePostRequests) super.setKey(key);
    }

    @Override
    public UpdatePostRequests setOauthToken(java.lang.String oauthToken) {
      return (UpdatePostRequests) super.setOauthToken(oauthToken);
    }

    @Override
    public UpdatePostRequests setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (UpdatePostRequests) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public UpdatePostRequests setQuotaUser(java.lang.String quotaUser) {
      return (UpdatePostRequests) super.setQuotaUser(quotaUser);
    }

    @Override
    public UpdatePostRequests setUserIp(java.lang.String userIp) {
      return (UpdatePostRequests) super.setUserIp(userIp);
    }

    @Override
    public UpdatePostRequests set(String parameterName, Object value) {
      return (UpdatePostRequests) super.set(parameterName, value);
    }
  }

  /**
   * Builder for {@link Clubs}.
   *
   * <p>
   * Implementation is not thread-safe.
   * </p>
   *
   * @since 1.3.0
   */
  public static final class Builder extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient.Builder {

    /**
     * Returns an instance of a new builder.
     *
     * @param transport HTTP transport, which should normally be:
     *        <ul>
     *        <li>Google App Engine:
     *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
     *        <li>Android: {@code newCompatibleTransport} from
     *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
     *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
     *        </li>
     *        </ul>
     * @param jsonFactory JSON factory, which may be:
     *        <ul>
     *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
     *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
     *        <li>Android Honeycomb or higher:
     *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
     *        </ul>
     * @param httpRequestInitializer HTTP request initializer or {@code null} for none
     * @since 1.7
     */
    public Builder(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
        com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      super(
          transport,
          jsonFactory,
          DEFAULT_ROOT_URL,
          DEFAULT_SERVICE_PATH,
          httpRequestInitializer,
          false);
    }

    /** Builds a new instance of {@link Clubs}. */
    @Override
    public Clubs build() {
      return new Clubs(this);
    }

    @Override
    public Builder setRootUrl(String rootUrl) {
      return (Builder) super.setRootUrl(rootUrl);
    }

    @Override
    public Builder setServicePath(String servicePath) {
      return (Builder) super.setServicePath(servicePath);
    }

    @Override
    public Builder setHttpRequestInitializer(com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      return (Builder) super.setHttpRequestInitializer(httpRequestInitializer);
    }

    @Override
    public Builder setApplicationName(String applicationName) {
      return (Builder) super.setApplicationName(applicationName);
    }

    @Override
    public Builder setSuppressPatternChecks(boolean suppressPatternChecks) {
      return (Builder) super.setSuppressPatternChecks(suppressPatternChecks);
    }

    @Override
    public Builder setSuppressRequiredParameterChecks(boolean suppressRequiredParameterChecks) {
      return (Builder) super.setSuppressRequiredParameterChecks(suppressRequiredParameterChecks);
    }

    @Override
    public Builder setSuppressAllChecks(boolean suppressAllChecks) {
      return (Builder) super.setSuppressAllChecks(suppressAllChecks);
    }

    /**
     * Set the {@link ClubsRequestInitializer}.
     *
     * @since 1.12
     */
    public Builder setClubsRequestInitializer(
        ClubsRequestInitializer clubsRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(clubsRequestInitializer);
    }

    @Override
    public Builder setGoogleClientRequestInitializer(
        com.google.api.client.googleapis.services.GoogleClientRequestInitializer googleClientRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(googleClientRequestInitializer);
    }
  }
}
